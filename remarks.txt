Compile:
========
cd bin
javac -cp /usr/share/java/jcifs.jar:/usr/share/java/log4j-1.2.jar -d . ../src/tm/mao/cbf/*.java

Run:
========
java -cp .:/usr/share/java/jcifs.jar:/usr/share/java/log4j-1.2.jar tm.mao.cbf.CleanBackupFolders

или

jar cfm CleanBackupFolders.jar manifest.txt tm/*
java -jar CleanBackupFolders.jar

Выделение цветом:
=================
log.info((char)27 + "[37;41m" + f.getName() + (char)27 + "[0m  <-- expired");

Шаблон 30 05 5 3 - дневные, недельные, месячные и годовые бэкапы

Общий алгоритм - Собрать список из дней, когда оставлять бэкапы, далее проходить по всем файлам и удалять неподходящие бэкапы. Также проверять размеры бэкапов (могут быть пустыми).


Создаем список
Если нужны дневные бэкапы:
	Заполняем его именами файлов (здесь и далее под файлом подразумеваются и каталоги) дневных бэкапов

***************
Поиск остальных типов бэкапов привязать к опорным дням недели бэкапов, что облегчит поиск
Предусмотреть поиск без опорных дней (отдельный класс?)
***************

Если нужны недельные бэкапы:
	Сдвигаемся на сутки вниз. Ищем вниз по дате бэкап датой ближайшего опорного дня недели (если нужны недельные бэкапы). С этого дня отсчитываем недельные бэкапы и если файл существует, заносим его в список

Если нужны месячные бэкапы:
	Определяем месяц и год, в котором находимся (с учетом нумерации месяцев в java)
	Берем первое число месяца и ищем дату опорного бэкапа
	Перемещаемся на месяц назад и снова повторяем процесс поиска опорного бэкапа

	Сдвигаемся на сутки вниз. Определяем месяц, в котором находимся, определяем, какой день недели приходится на это число и является ли этот день опорным. Если нет, ищем вверх ближайший опорный бэкап и фиксируем его в списке. Сдвигаемся на месяц ниже и повторяем процедуру для всех оставшихся месячных бэкапов. Ловушка - переход через январь-декабрь!

Если нужны ежегодные бэкапы:
	Определяем текущий год, на котором остановились. Берем 1-е января и ищем вверх ближайший опорный день. Фиксируем в списке, уменьшаем год и повторяем процедуру. Найденные бэкапы фиксируем в списке.
Далее просматриваем каталог бэкапа и проверяем каждый элемент на запись в нашем списке. Если он там не обнаружен, удаляем его с диска с фиксацией в логе.


